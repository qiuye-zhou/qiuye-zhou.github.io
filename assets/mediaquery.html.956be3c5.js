import{_ as n,o as s,c as a,b as t}from"./app.743f0f23.js";const e={},o=t(`<h1 id="媒体查询" tabindex="-1"><a class="header-anchor" href="#媒体查询" aria-hidden="true">#</a> 媒体查询</h1><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><p><code>useMedia(value, type) =&gt; vue.Ref&lt;boolean&gt;</code></p><p><code>value</code> 接受一个number <strong>(可以接受一个ref动态监听)</strong> 默认768，即媒体查询判断的边界值</p><p><code>type</code> 只接受一个string类型 <strong>(可以接受一个ref动态监听)</strong> 的 <code>max</code> 或 <code>min</code> 值 默认max, 即媒体查询类型，max (浏览器宽度比 <code>value</code> 小返回true) 或 min (浏览器宽度比 <code>value</code> 大返回true)</p><p><code>vue.Ref&lt;boolean&gt;</code> 返回一个 <code>ref(boolean)</code> 值，即是否符合查询条件</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token operator">&lt;</span>script lang<span class="token operator">=</span><span class="token string">&quot;ts&quot;</span> setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useMedia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;use-aid&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> valuetest <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">768</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> typetest <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> isMedia <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token function">useMedia</span><span class="token punctuation">(</span>valuetest<span class="token punctuation">,</span> typetest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>button <span class="token decorator"><span class="token at operator">@</span><span class="token function">click</span></span><span class="token operator">=</span><span class="token string">&quot;typetest = &#39;max&#39;;&quot;</span><span class="token operator">&gt;</span>
        change max
    <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>button <span class="token decorator"><span class="token at operator">@</span><span class="token function">click</span></span><span class="token operator">=</span><span class="token string">&quot;typetest = &#39;min&#39;;&quot;</span><span class="token operator">&gt;</span>
        change min
    <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>select v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;valuetest&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;768&quot;</span><span class="token operator">&gt;</span>
            <span class="token number">768</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;920&quot;</span><span class="token operator">&gt;</span>
            <span class="token number">920</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;1024&quot;</span><span class="token operator">&gt;</span>
            <span class="token number">1024</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">(</span>isMedia <span class="token operator">?</span> <span class="token string">&#39;be in&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;Not in&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>typetest<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>valuetest<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),p=[o];function c(l,r){return s(),a("div",null,p)}const u=n(e,[["render",c],["__file","mediaquery.html.vue"]]);export{u as default};
